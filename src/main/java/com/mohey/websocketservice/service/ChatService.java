package com.mohey.websocketservice.service;import org.bson.types.ObjectId;import org.springframework.data.mongodb.core.MongoTemplate;import org.springframework.stereotype.Service;import com.mohey.websocketservice.dto.ChatMember;import com.mohey.websocketservice.dto.ChatMessage;import com.mohey.websocketservice.dto.Group;import com.mohey.websocketservice.dto.ReceiveGroup;import com.mohey.websocketservice.repository.ChatRepository;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;@Service@RequiredArgsConstructor@Slf4jpublic class ChatService {	//@Autowired	private final ChatRepository chatRepository;	private final MongoTemplate mongoTemplate;	// @Autowired	// public ChatService(ChatRepository chatRepository) {	// 	this.chatRepository = chatRepository;	// }	public void save(ChatMessage message){		try {			chatRepository.save(message);		}catch (Exception e){			log.error(e.getMessage());		}	};	public void create(ReceiveGroup receive){		try {			Group group = new Group();			group.setGroupUuid(receive.getGroupUuid());			group.setConnect_time("현재 시간 2342");			ChatMember member = new ChatMember();			member.setMemberUuid(receive.getMemberUuid());			ChatMember chatMember = mongoTemplate.findById(new ObjectId(receive.getMemberUuid()), ChatMember.class);			chatMember.getGroups().add(group);			mongoTemplate.save(chatMember);		}catch (Exception e){			log.error(e.getMessage());		}	};}