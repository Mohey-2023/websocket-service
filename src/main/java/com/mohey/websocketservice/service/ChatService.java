package com.mohey.websocketservice.service;import java.util.ArrayList;import java.util.List;import org.bson.types.ObjectId;import org.springframework.data.mongodb.core.MongoTemplate;import org.springframework.data.mongodb.core.query.Criteria;import org.springframework.data.mongodb.core.query.Query;import org.springframework.stereotype.Service;import com.mohey.websocketservice.dto.ChatMember;import com.mohey.websocketservice.dto.ChatMessage;import com.mohey.websocketservice.dto.ChatRoom;import com.mohey.websocketservice.dto.Group;import com.mohey.websocketservice.dto.ReceiveGroup;import com.mohey.websocketservice.repository.ChatRepository;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;@Service@RequiredArgsConstructor@Slf4jpublic class ChatService {	//@Autowired	private final ChatRepository chatRepository;	private final MongoTemplate mongoTemplate;	// @Autowired	// public ChatService(ChatRepository chatRepository) {	// 	this.chatRepository = chatRepository;	// }	public void save(ChatMessage message){		try {			chatRepository.save(message);		}catch (Exception e){			log.error(e.getMessage());		}	};	public void create(ReceiveGroup receive){		try {			Group group = new Group();			group.setGroupUuid(receive.getGroupUuid());			group.setConnect_time("현재 시간 2342");			Query query = new Query(Criteria.where("memberUuid").is(receive.getMemberUuid()));			ChatMember chatMember = mongoTemplate.findOne(query, ChatMember.class);			if (chatMember == null){				chatMember = new ChatMember();				chatMember.setMemberUuid(receive.getMemberUuid());				chatMember.setGroups(new ArrayList<>());			}else{				// 기존에 해당 그룹이 존재하는지 확인하여 업데이트 가능				List<Group> groups = chatMember.getGroups();				for (Group existingGroup : groups) {					if (existingGroup.getGroupUuid().equals(receive.getGroupUuid())) {						// 기존에 해당 그룹이 존재하는 경우 업데이트						existingGroup.setConnect_time("현재 시간 2342");						break;					}				}			}			chatMember.getGroups().add(group); //memberdml groups에 새로운 group 추가			ChatRoom chatRoom = new ChatRoom(receive.getGroupUuid(),receive.getGroupName(), receive.getGroupType());			mongoTemplate.save(chatRoom); //			mongoTemplate.save(chatMember); //chatting_member collection 저장		}catch (Exception e){			log.error(e.getMessage());		}	};}